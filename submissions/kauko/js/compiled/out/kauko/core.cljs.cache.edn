;; Analyzed by ClojureScript 1.7.122
{:use-macros {reaction reagent.ratom, go cljs.core.async.macros, go-loop cljs.core.async.macros, run! reagent.ratom}, :excludes #{}, :name kauko.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, r kauko.requests, kauko.requests kauko.requests, ws kauko.websockets, kauko.websockets kauko.websockets, clojure.set clojure.set, async cljs.core.async, cljs.core.async cljs.core.async}, :uses {atom reagent.core, <! cljs.core.async, intersection clojure.set, >! cljs.core.async, difference clojure.set}, :defs {stop-fetching-for! {:protocol-inline nil, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 97, :column 7, :end-line 97, :end-column 25, :arglists (quote ([coll] [coll key])), :doc "Aborts requests for masters/apprentices of the sith in coll.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [coll key]), :arglists ([coll] [coll key]), :arglists-meta (nil nil)}}, :name kauko.core/stop-fetching-for!, :variadic false, :file "src\\kauko\\core.cljs", :end-column 25, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [coll key]), :arglists ([coll] [coll key]), :arglists-meta (nil nil)}, :method-params ([coll] [coll key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists ([coll] [coll key]), :doc "Aborts requests for masters/apprentices of the sith in coll."}, obi-wan-location {:name kauko.core/obi-wan-location, :file "src\\kauko\\core.cljs", :line 18, :column 1, :end-line 18, :end-column 26, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 18, :column 10, :end-line 18, :end-column 26}}, main-view {:protocol-inline nil, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 118, :column 7, :end-line 118, :end-column 16, :arglists (quote ([]))}, :name kauko.core/main-view, :variadic false, :file "src\\kauko\\core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, num-of-sith {:name kauko.core/num-of-sith, :file "src\\kauko\\core.cljs", :line 15, :column 1, :end-line 15, :end-column 17, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 15, :column 6, :end-line 15, :end-column 17}}, sith-fetched! {:protocol-inline nil, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 74, :column 7, :end-line 74, :end-column 20, :arglists (quote ([sith]))}, :name kauko.core/sith-fetched!, :variadic false, :file "src\\kauko\\core.cljs", :end-column 20, :method-params ([sith]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sith]))}, get-index-for-sith {:protocol-inline nil, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 57, :column 7, :end-line 57, :end-column 25, :arglists (quote ([sith]))}, :name kauko.core/get-index-for-sith, :variadic false, :file "src\\kauko\\core.cljs", :end-column 25, :method-params ([sith]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sith]))}, sith-list {:name kauko.core/sith-list, :file "src\\kauko\\core.cljs", :line 19, :column 1, :end-line 19, :end-column 19, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 19, :column 10, :end-line 19, :end-column 19}}, get-apprentice {:protocol-inline nil, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 21, :column 7, :end-line 21, :end-column 21, :arglists (quote ([index]))}, :name kauko.core/get-apprentice, :variadic false, :file "src\\kauko\\core.cljs", :end-column 21, :method-params ([index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([index]))}, nil-to-end {:protocol-inline nil, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 93, :column 7, :end-line 93, :end-column 17, :arglists (quote ([coll num-to-take num-of-nil]))}, :name kauko.core/nil-to-end, :variadic false, :file "src\\kauko\\core.cljs", :end-column 17, :method-params ([coll num-to-take num-of-nil]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 3, :fn-var true, :arglists (quote ([coll num-to-take num-of-nil]))}, nil-to-start {:protocol-inline nil, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 89, :column 7, :end-line 89, :end-column 19, :arglists (quote ([col num-to-take num-of-nil]))}, :name kauko.core/nil-to-start, :variadic false, :file "src\\kauko\\core.cljs", :end-column 19, :method-params ([col num-to-take num-of-nil]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 3, :fn-var true, :arglists (quote ([col num-to-take num-of-nil]))}, single-sith {:protocol-inline nil, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 106, :column 7, :end-line 106, :end-column 18, :arglists (quote ([sith generated_id]))}, :name kauko.core/single-sith, :variadic false, :file "src\\kauko\\core.cljs", :end-column 18, :method-params ([sith generated_id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sith generated_id]))}, fetch-some-sith! {:protocol-inline nil, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 36, :column 7, :end-line 36, :end-column 23, :arglists (quote ([whole-list]))}, :name kauko.core/fetch-some-sith!, :variadic false, :file "src\\kauko\\core.cljs", :end-column 23, :method-params ([whole-list]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([whole-list]))}, num-of-steps {:name kauko.core/num-of-steps, :file "src\\kauko\\core.cljs", :line 16, :column 1, :end-line 16, :end-column 18, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 16, :column 6, :end-line 16, :end-column 18}}, get-master {:protocol-inline nil, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 24, :column 7, :end-line 24, :end-column 17, :arglists (quote ([index]))}, :name kauko.core/get-master, :variadic false, :file "src\\kauko\\core.cljs", :end-column 17, :method-params ([index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([index]))}, obi-wan-on-sith-planet? {:protocol-inline nil, :meta {:file "C:\\Users\\kauko\\Documents\\code\\flux-challenge\\submissions\\kauko\\src\\kauko\\core.cljs", :line 27, :column 7, :end-line 27, :end-column 30, :arglists (quote ([]))}, :name kauko.core/obi-wan-on-sith-planet?, :variadic false, :file "src\\kauko\\core.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:seen #{:ul :color :key :else :sith-list-watcher :button :name :li :section :recur :on-click :style :div :apprentice :h6 :id :class :auto-run :master :h1 :homeworld :h3 :body :request-aborter}, :order [:apprentice :master :homeworld :name :id :sith-list-watcher :request-aborter :recur :body :else :li :class :style :color :h3 :h6 :key :div :h1 :section :ul :button :on-click :auto-run]}, :doc nil}